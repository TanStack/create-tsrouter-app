import { createRouter as createTanstackRouter } from '@tanstack/react-router'<% if (addOnEnabled['tanstack-query']) { %>
import { routerWithQueryClient } from '@tanstack/react-router-with-query'
import * as TanstackQuery from './integrations/tanstack-query/root-provider'
<% } %>

// Import the generated route tree
import { routeTree } from './routeTree.gen'

// Create a new router instance
export const createRouter = () => {
  <% if (addOnEnabled['tanstack-query']) { %>
  const router = routerWithQueryClient(createTanstackRouter({
    routeTree,
    context: {
      <% if (addOnEnabled['tanstack-query']) { %>
        ...TanstackQuery.getContext(),
      <% } %>
    },
    scrollRestoration: true,
    defaultPreloadStaleTime: 0,
    <% if (addOnEnabled.tRPC) { %>
    Wrap: (props: { children: React.ReactNode }) => {
      return (
        <TanstackQuery.Provider>
          {props.children}
        </TanstackQuery.Provider>
      );
    },
  <% } %>
  }), TanstackQuery.getContext().queryClient)
  <% } else { %>
  const router = createTanstackRouter({
    routeTree,
    scrollRestoration: true,
    defaultPreloadStaleTime: 0,
  })
  <% } %>
  return router
}

// Register the router instance for type safety
declare module '@tanstack/react-router' {
  interface Register {
    router: ReturnType<typeof createRouter>
  }
}
